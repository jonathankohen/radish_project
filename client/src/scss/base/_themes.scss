// Another idea!

$themes: (
    'light': (
        'colors': (
            'primary': #662e9b,
            'secondary': #43bccd,
        ),
        'shades': (
            'shade-0': #ffffff,
            'shade-1': #f5f5f5,
            'shade-2': #d8d8d8,
            'shade-3': #bbbbbb,
            'shade-4': #979797,
            'shade-5': #535353,
            'shade-6': #0c0c0c,
        ),
    ),
    'dark': (
        'colors': (
            'primary': #88d498,
            'secondary': #db5375,
        ),
        'shades': (
            'shade-0': #404447,
            'shade-1': #303437,
            'shade-2': #616161,
            'shade-3': #757575,
            'shade-4': #9e9e9e,
            'shade-5': #bdbdbd,
            'shade-6': #f5f5f5,
        ),
    ),
);

@each $theme-name, $theme-vars in $themes {
    $shades: map-get($theme-vars, 'shades');
    $colors: map-get($theme-vars, 'colors');

    $theme: (
        'bg-color': map-get($shades, 'shade-1'),
        'border-color': map-get($shades, 'shade-2'),
        'border-focus-color': map-get($shades, 'shade-3'),
        'subtle': map-get($shades, 'shade-4'),
        'muted': map-get($shades, 'shade-5'),
        'text-color': map-get($shades, 'shade-6'),
    );

    .app.#{$theme-name} {
        // define a css variable for each shade
        @each $name, $color in $shades {
            --#{$name}: #{$color};
        }

        // define a css variable for each color
        @each $name, $color in $colors {
            --#{$name}: #{$color};
            --#{$name}-dark: #{darken($color, 10%)};
            --#{$name}-darker: #{darken($color, 20%)};
        }

        // define a css variable for each theme color
        @each $name, $color in $theme {
            --#{$name}: #{$color};
        }
    }
}

.app {
    background: var(--bg-color);
    color: var(--text-color);
    margin: auto;
    max-width: 720px;
    padding: 2rem;
}

.primary {
    color: var(--primary);
}

.primary-dark {
    color: var(--primary-dark);
}

.primary-darker {
    color: var(--primary-darker);
}

.current-theme {
    color: var(--subtle);

    .theme-name {
        color: var(--secondary);
    }
}

.btn {
    background: var(--bg-color);
    border: 2px solid var(--border-color);
    color: var(--text-color);
    padding: 1rem;

    &:focus {
        border-color: var(--border-focus-color);
        outline: 1px solid var(--muted);
    }
}

// $colors: (
//     dark_bg: hsl(207, 26%, 17%),
//     dark_elements: hsl(209, 23%, 22%),
//     dark_text: hsl(0, 0%, 100%),
//     light_bg: hsl(0, 0%, 98%),
//     light_elements: hsl(0, 0%, 100%),
//     light_text: hsl(200, 15%, 8%),
//     light_input: hsl(0, 0%, 52%),
// );

// @mixin change_colors($light_or_dark) {
//     background-color: map-get($colors, $light_or_dark + '_bg');
//     // color: map-get($colors, $light_or_dark + '_text');

//     .navbar-brand {
//         font-size: $font_size_title;
//         font-weight: $font_weight_semibold;
//     }

//     .toggle_link {
//         text-decoration: none;
//         color: map-get($colors, $light_or_dark + '_text');
//         font-size: $font_size_home;
//         font-weight: $font_weight_semibold;
//         &:hover {
//             color: map-get($colors, $light_or_dark + '_text');
//             text-decoration: underline;
//         }
//     }

//     .card {
//         background-color: map-get($colors, $light_or_dark + '_bg');
//         color: map-get($colors, $light_or_dark + '_text');

//         .card-title {
//             color: map-get($colors, $light_or_dark + '_text');
//             font-weight: $font_weight_bold;
//         }

//         .card-text {
//             margin: 0;
//             padding: 0;
//         }
//     }

//     .details {
//         font-size: $font_size_detail;
//     }

//     .form-control {
//         background-color: map-get($colors, $light_or_dark + '_element');
//     }
// }

// .navbar-#{light_or_dark} {
//         background-color: map-get($colors, $light_or_dark + '_elements');
//         color: map-get($colors, $light_or_dark + '_text');
//     }

//     .bg-#{light_or_dark} {
//         background-color: map-get($colors, $light_or_dark + '_bg');
//     }

// @if ($light_or_dark == 'light') {
//     .toggle_link {
//         text-decoration: none;
//         color: $lightmode_text;
//         font-size: $font_size_home;
//         font-weight: $font_weight_semibold;
//         &:hover {
//             color: $lightmode_text;
//             text-decoration: underline;
//         }
//     }
// } @else {
//     .toggle_link {
//         text-decoration: none;
//         color: $darkmode_text;
//         font-size: $font_size_home;
//         font-weight: $font_weight_semibold;
//         &:hover {
//             color: $darkmode_text;
//             text-decoration: underline;
//         }
//     }
// }

// @if $light_or_dark == 'light' {
//     .navbar-light {
//         background-color: map-get($colors, $light_or_dark + '_elements');
//         color: map-get($colors, $light_or_dark + '_text');
//     }

//     .bg-light {
//         background-color: map-get($colors, $light_or_dark + '_bg');
//     }

//     #search_input::placeholder {
//         font-size: $font_size_home;
//         color: map-get($colors, $light_or_dark + '_input');
//     }
// } @else {
//     .navbar-dark {
//         background-color: map-get($colors, $light_or_dark + '_elements');
//         color: map-get($colors, $light_or_dark + '_text');
//     }

//     .bg-dark {
//         background-color: map-get($colors, $light_or_dark + '_bg');
//     }

//     #search_input::placeholder {
//         font-size: $font_size_home;
//         color: map-get($colors, $light_or_dark + '_text');
//     }
// }
